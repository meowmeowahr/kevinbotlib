{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to KevinbotLib","text":"<p>KevinbotLib is a robot control system for Kevinbot v3 and the Kevinbot Core. You can easily and safely control Kevinbot's drivebase, servos, lighting, and more. It also continuously polls sensor data. It can operate in two modes: Direct Serial, and MQTT with the Kevinbot Server.</p>"},{"location":"#features","title":"Features","text":"<ul> <li> <p>Multiple Control Interfaces</p> <ul> <li>Direct Serial mode</li> <li>MQTT networked mode (with KevinbotLib Server)</li> </ul> </li> <li> <p>Comprehensive Subsystem Control</p> <ul> <li>Drivebase with power and state monitoring</li> <li>Servo control</li> <li>Multi-zone lighting system with effects</li> <li>Continuous sensor polling</li> <li>Battery management and monitoring</li> <li>IMU support (gyroscope and accelerometer)</li> </ul> </li> <li> <p>Developer-Friendly Design</p> <ul> <li>Simple MQTT API</li> <li>Extensive configuration options</li> <li>Real-time state tracking</li> <li>Built-in safety features</li> <li>Detailed logging and debugging</li> <li>Python 3.13 support</li> </ul> </li> <li> <p>Robust Architecture</p> <ul> <li>Thread-safe communication</li> <li>Event-based callback system</li> <li>Auto-reconnection handling</li> <li>Multiple client support via MQTT</li> </ul> </li> </ul> <p>Development</p> <p>This project is in the early stage of development. There are many missing functions that will be supported in the future.</p>"},{"location":"architecture/","title":"Architecture","text":""},{"location":"examples/","title":"Examples","text":"<p>Most examples include two variants for serial, and MQTT. Source code can be found here</p> <p>For more information, see Serial vs. MQTT</p>"},{"location":"examples/#core","title":"Core","text":""},{"location":"examples/#robot-connection","title":"Robot Connection","text":"SerialMQTT examples/core/connecting_serial.py examples/core/connecting.py"},{"location":"examples/#robot-enabling-and-disabling","title":"Robot Enabling and Disabling","text":"SerialMQTT examples/core/enable_serial.py examples/core/enable.py"},{"location":"examples/#robot-emergency-stop","title":"Robot Emergency Stop","text":"SerialMQTT examples/core/estop_serial.py examples/core/estop.py"},{"location":"examples/#robot-state-retrieval","title":"Robot State Retrieval","text":"SerialMQTT examples/core/state_serial.py examples/core/state.py"},{"location":"examples/#robot-timestamp-retrieval-mqtt-only","title":"Robot Timestamp Retrieval <code>MQTT Only</code>","text":"MQTT examples/core/timestamp.py"},{"location":"examples/#robot-uptime-retrieval","title":"Robot Uptime Retrieval","text":"SerialMQTT examples/core/uptimes_serial.py examples/core/uptimes.py"},{"location":"examples/#battery","title":"Battery","text":""},{"location":"examples/#robot-battery-readings","title":"Robot Battery Readings","text":"SerialMQTT examples/battery/readings_serial.py examples/battery/readings.py"},{"location":"examples/#environment","title":"Environment","text":""},{"location":"examples/#bme280","title":"BME280","text":"SerialMQTT examples/environment/bme280_serial.py examples/environment/bme280.py"},{"location":"examples/#ds18b20","title":"DS18B20","text":"SerialMQTT examples/environment/ds18b20_serial.py examples/environment/ds18b20.py"},{"location":"examples/#imu","title":"IMU","text":""},{"location":"examples/#periodic-polling","title":"Periodic Polling","text":"SerialMQTT examples/imu/periodic_serial.py examples/imu/periodic.py"},{"location":"examples/#plotting-with-matplotlib","title":"Plotting with matplotlib","text":"SerialMQTT <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/imu/plot_serial.py</p> <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/imu/plot.py</p>"},{"location":"examples/#servo","title":"Servo","text":""},{"location":"examples/#sweep-demo","title":"Sweep demo","text":"SerialMQTT <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/servo/sweep_serial.py</p> <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/servo/sweep.py</p>"},{"location":"examples/#drive","title":"Drive","text":""},{"location":"examples/#status","title":"Status","text":"SerialMQTT examples/drive/status_serial.py examples/drive/status.py"},{"location":"examples/#drive-at-power","title":"Drive at Power","text":"SerialMQTT examples/drive/drive_serial.py examples/drive/drive.py"},{"location":"examples/#eyes","title":"Eyes","text":""},{"location":"examples/#connecting","title":"Connecting","text":"SerialMQTT examples/eyes/connecting_serial.py examples/eyes/connecting.py"},{"location":"examples/#state","title":"State","text":"SerialMQTT examples/eyes/state_serial.py examples/eyes/state.py"},{"location":"examples/#backlight","title":"Backlight","text":"SerialMQTT examples/eyes/backlight_serial.py examples/eyes/backlight.py"},{"location":"examples/#motion-mode-control","title":"Motion Mode Control","text":"SerialMQTT examples/eyes/motions_serial.py examples/eyes/motions.py"},{"location":"examples/#skin-setting-control","title":"Skin Setting Control","text":"SerialMQTT examples/eyes/skins_serial.py examples/eyes/skins.py"},{"location":"examples/#manual-motions-demo","title":"Manual Motions Demo","text":"SerialMQTT examples/eyes/manual_serial.py examples/eyes/manual.py"},{"location":"examples/#simple-skin-full-options-demo","title":"Simple Skin Full Options Demo","text":"SerialMQTT <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/eyes/simple_skin_serial.py</p> <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/eyes/simple_skin.py</p>"},{"location":"examples/#metal-skin-full-options-demo","title":"Metal Skin Full Options Demo","text":"SerialMQTT <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/eyes/metal_skin_serial.py</p> <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/eyes/metal_skin.py</p>"},{"location":"examples/#neon-skin-full-options-demo","title":"Neon Skin Full Options Demo","text":"SerialMQTT <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/eyes/neon_skin_serial.py</p> <p>https://github.com/meowmeowahr/kevinbotlib/blob/main/examples/eyes/neon_skin.py</p>"},{"location":"installation/","title":"Installation","text":"<p>Info</p> <p>KevinbotLib requires Python 3.10 or newer.</p>"},{"location":"installation/#system-dependencies","title":"System Dependencies","text":"<p>If you want to use the TTS (Text-to-Speech) extra on Linux, you must install PortAudio</p> <ul> <li>Debian/Ubuntu/RpiOS</li> </ul> <pre><code>sudo apt install portaudio19-dev\n</code></pre>"},{"location":"installation/#install-with-pip","title":"Install with pip","text":"<p>Run the following in a virtual environment for the base version. <pre><code>pip install kevinbotlib\n</code></pre></p> <p>Run the following if you want to install the TTS (Text-to-Speech) extra. <pre><code>pip install kevinbotlib[tts]\n</code></pre></p>"},{"location":"installation/#install-with-pipx","title":"Install with pipx","text":"<p>Tip</p> <p>pipx installation will only install command-line tools and the KevinbotLib Server. Use the regular pip installation if you want any development tools.</p> <ol> <li>Install pipx here</li> <li> <p>Install KevinbotLib</p> <p>Run the follwoing: <pre><code>pipx install kevinbotlib\n</code></pre></p> </li> </ol>"},{"location":"reference/","title":"Reference","text":""}]}